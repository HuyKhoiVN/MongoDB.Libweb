@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
}

<style>
        .admin-container {
            margin: 0 auto;
            padding: 20px;
        }
        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
            transition: transform 0.3s;
        }
        .stat-card:hover {
            transform: translateY(-5px);
        }
        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            color: var(--primary-color);
            margin-bottom: 10px;
        }
        .stat-label {
            color: #666;
            font-size: 1.1em;
        }
        .chart-container {
            background: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }
        .loading {
            text-align: center;
            padding: 50px;
            color: #666;
        }
        .error {
            background: #ffebee;
            color: #c62828;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        /* Responsive Design */
        @@media (max-width: 1024px) {
            .admin-container {
                padding: 15px;
            }
            
            .dashboard-grid {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 15px;
            }
            
            .stat-card {
                padding: 20px;
            }
            
            .stat-number {
                font-size: 2.2em;
            }
        }
        
        @@media (max-width: 768px) {
            .admin-container {
                padding: 10px;
            }
            
            .dashboard-grid {
                grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
                gap: 12px;
            }
            
            .stat-card {
                padding: 18px;
            }
            
            .stat-number {
                font-size: 2em;
            }
            
            .stat-label {
                font-size: 1em;
            }
        }
        
        @@media (max-width: 480px) {
            .admin-container {
                padding: 5px;
            }
            
            .dashboard-grid {
                grid-template-columns: 1fr;
                gap: 10px;
            }
            
            .stat-card {
                padding: 15px;
            }
            
            .stat-number {
                font-size: 1.8em;
                margin-bottom: 8px;
            }
            
            .stat-label {
                font-size: 0.9em;
            }
            
            .chart-container {
                padding: 20px;
                margin-bottom: 15px;
            }
        }
        
        @@media (max-width: 320px) {
            .stat-card {
                padding: 12px;
            }
            
            .stat-number {
                font-size: 1.6em;
            }
            
            .stat-label {
                font-size: 0.85em;
            }
            
            .chart-container {
                padding: 15px;
            }
        }
    </style>

<div class="admin-container">
        <h1>Admin Dashboard</h1>
        
        <div id="error-container"></div>
        
        <div class="dashboard-grid">
            <div class="stat-card">
                <div class="stat-number" id="user-count">-</div>
                <div class="stat-label">Total Users</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="book-count">-</div>
                <div class="stat-label">Total Books</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="active-borrows">-</div>
                <div class="stat-label">Active Borrows</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="overdue-borrows">-</div>
                <div class="stat-label">Overdue Books</div>
            </div>
        </div>

        @* <div class="chart-container">
            <h3>Recent Activity</h3>
            <div id="recent-activity">
                <div class="loading">Loading recent activity...</div>
            </div>
        </div> *@

    <script src="~/template/template.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            loadDashboardData();
        });

        async function loadDashboardData() {
            try {
                // Load statistics
                const [userCount, bookCount, activeBorrows, overdueBorrows] = await Promise.all([
                    ELibAPI.get(ELibAPI.endpoints.user.count),
                    ELibAPI.get(ELibAPI.endpoints.book.count),
                    ELibAPI.get(ELibAPI.endpoints.borrow.countActive),
                    ELibAPI.get(ELibAPI.endpoints.borrow.countOverdue)
                ]);

                // Update UI
                document.getElementById('user-count').textContent = userCount.data || 0;
                document.getElementById('book-count').textContent = bookCount.data || 0;
                document.getElementById('active-borrows').textContent = activeBorrows.data || 0;
                document.getElementById('overdue-borrows').textContent = overdueBorrows.data || 0;

                // Load recent activity
                //loadRecentActivity();

            } catch (error) {
                console.error('Error loading dashboard data:', error);
                showError('Failed to load dashboard data: ' + error.message);
            }
        }

        async function loadRecentActivity() {
            try {
                const recentBorrows = await ELibAPI.get(ELibAPI.endpoints.borrow.getAll() + '?page=1&limit=5');
                
                const activityContainer = document.getElementById('recent-activity');
                if (recentBorrows.data && recentBorrows.data.length > 0) {
                    activityContainer.innerHTML = recentBorrows.data.map(borrow => `
                        <div style="padding: 10px; border-bottom: 1px solid #eee;">
                            <strong>Book ID:</strong> ${borrow.bookId} | 
                            <strong>User ID:</strong> ${borrow.userId} | 
                            <strong>Status:</strong> ${borrow.status} | 
                            <strong>Date:</strong> ${new Date(borrow.borrowDate).toLocaleDateString()}
                        </div>
                    `).join('');
                } else {
                    activityContainer.innerHTML = '<div style="text-align: center; color: #666;">No recent activity</div>';
                }
            } catch (error) {
                console.error('Error loading recent activity:', error);
                document.getElementById('recent-activity').innerHTML = '<div style="text-align: center; color: #c62828;">Failed to load recent activity</div>';
            }
        }

        function showError(message) {
            const errorContainer = document.getElementById('error-container');
            errorContainer.innerHTML = `<div class="error">${message}</div>`;
        }
    </script>