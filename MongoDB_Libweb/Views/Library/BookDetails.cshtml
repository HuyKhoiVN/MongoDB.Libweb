@{
    ViewData["Title"] = "Book Details";
    Layout = "~/Views/Library/_LibraryLayout.cshtml";
}

<style>
        .book-details-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .book-header {
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }
        .book-main {
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 30px;
            align-items: start;
        }
        .book-cover-large {
            width: 100%;
            height: 400px;
            background: linear-gradient(45deg, #f0f0f0, #e0e0e0);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 72px;
            color: #999;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        .book-info {
            padding: 20px 0;
        }
        .book-title {
            font-size: 2.5em;
            font-weight: bold;
            margin-bottom: 15px;
            color: #333;
            line-height: 1.2;
        }
        .book-meta {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }
        .meta-item {
            display: flex;
            flex-direction: column;
        }
        .meta-label {
            font-size: 0.9em;
            color: #666;
            margin-bottom: 5px;
        }
        .meta-value {
            font-weight: bold;
            color: #333;
        }
        .book-description {
            font-size: 1.1em;
            line-height: 1.6;
            color: #555;
            margin-bottom: 30px;
        }
        .book-actions {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }
        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }
        .btn-primary {
            background: var(--primary-color);
            color: white;
        }
        .btn-primary:hover {
            background: #e55a00;
            transform: translateY(-2px);
        }
        .btn-secondary {
            background: #6c757d;
            color: white;
        }
        .btn-secondary:hover {
            background: #5a6268;
        }
        .btn-danger {
            background: #dc3545;
            color: white;
        }
        .btn-danger:hover {
            background: #c82333;
        }
        .btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
        }
        .related-books {
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }
        .section-title {
            font-size: 1.8em;
            margin-bottom: 20px;
            color: #333;
        }
        .books-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
        }
        .book-card {
            background: #f8f9fa;
            border-radius: 8px;
            overflow: hidden;
            transition: transform 0.3s;
        }
        .book-card:hover {
            transform: translateY(-3px);
        }
        .book-cover-small {
            width: 100%;
            height: 120px;
            background: linear-gradient(45deg, #f0f0f0, #e0e0e0);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            color: #999;
        }
        .book-card-info {
            padding: 15px;
        }
        .book-card-title {
            font-weight: bold;
            margin-bottom: 5px;
            color: #333;
            font-size: 0.9em;
            line-height: 1.3;
        }
        .book-card-author {
            color: #666;
            font-size: 0.8em;
        }
        .loading {
            text-align: center;
            padding: 50px;
            color: #666;
        }
        .error {
            background: #ffebee;
            color: #c62828;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: bold;
            display: inline-block;
        }
        .status-available {
            background: #d4edda;
            color: #155724;
        }
        .status-unavailable {
            background: #f8d7da;
            color: #721c24;
        }
        .status-borrowed {
            background: #fff3cd;
            color: #856404;
        }
        @@media (max-width: 768px) {
            .book-main {
                grid-template-columns: 1fr;
            }
            .book-cover-large {
                height: 300px;
            }
        }
        
        /* Responsive Design */
        @@media (max-width: 1024px) {
            .book-details-container {
                padding: 15px;
            }
            
            .book-details-header {
                padding: 25px;
            }
            
            .book-details-content {
                grid-template-columns: 1fr 1fr;
                gap: 25px;
            }
            
            .book-cover-large {
                height: 250px;
            }
        }
        
        @@media (max-width: 768px) {
            .book-details-container {
                padding: 10px;
            }
            
            .book-details-header {
                padding: 20px;
            }
            
            .book-details-content {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .book-cover-section {
                text-align: center;
            }
            
            .book-cover-large {
                height: 200px;
                max-width: 300px;
            }
            
            .book-actions {
                flex-direction: column;
                gap: 10px;
            }
            
            .btn-borrow,
            .btn-back {
                width: 100%;
                text-align: center;
            }
        }
        
        @@media (max-width: 480px) {
            .book-details-container {
                padding: 5px;
            }
            
            .book-details-header {
                padding: 15px;
            }
            
            .book-title {
                font-size: 1.5em;
                margin-bottom: 10px;
            }
            
            .book-author {
                font-size: 1em;
                margin-bottom: 8px;
            }
            
            .book-meta {
                font-size: 0.9em;
                margin-bottom: 15px;
            }
            
            .book-cover-large {
                height: 180px;
                max-width: 250px;
            }
            
            .book-description {
                font-size: 0.9em;
                line-height: 1.5;
            }
            
            .book-categories {
                margin-bottom: 15px;
            }
            
            .book-category {
                font-size: 0.8em;
                padding: 2px 6px;
            }
            
            .btn-borrow,
            .btn-back {
                padding: 8px 16px;
                font-size: 14px;
            }
        }
        
        @@media (max-width: 320px) {
            .book-title {
                font-size: 1.3em;
            }
            
            .book-author {
                font-size: 0.9em;
            }
            
            .book-meta {
                font-size: 0.8em;
            }
            
            .book-cover-large {
                height: 150px;
                max-width: 200px;
            }
            
            .book-description {
                font-size: 0.85em;
            }
            
            .book-category {
                font-size: 0.75em;
                padding: 1px 4px;
            }
            
            .btn-borrow,
            .btn-back {
                padding: 6px 12px;
                font-size: 12px;
            }
        }
    </style>

<div class="book-details-container">
        <div id="error-container"></div>
        
        <div id="book-loading" class="loading">Loading book details...</div>
        
        <div class="book-header" id="book-header" style="display: none;">
            <div class="book-main">
                <div class="book-cover-large">ðŸ“š</div>
                <div class="book-info">
                    <h1 class="book-title" id="book-title">Book Title</h1>
                    
                    <div class="book-meta">
                        <div class="meta-item">
                            <div class="meta-label">Authors</div>
                            <div class="meta-value" id="book-authors">Unknown</div>
                        </div>
                        <div class="meta-item">
                            <div class="meta-label">Year</div>
                            <div class="meta-value" id="book-year">Unknown</div>
                        </div>
                        <div class="meta-item">
                            <div class="meta-label">Categories</div>
                            <div class="meta-value" id="book-categories">Unknown</div>
                        </div>
                        <div class="meta-item">
                            <div class="meta-label">Status</div>
                            <div class="meta-value" id="book-status">Unknown</div>
                        </div>
                    </div>
                    
                    <div class="book-description" id="book-description">
                        Book description will be loaded here...
                    </div>
                    
                    <div class="book-actions">
                        <button class="btn btn-primary" id="borrow-btn" onclick="borrowBook()">Borrow Book</button>
                        <button class="btn btn-secondary" onclick="goBack()">Back to Library</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="related-books" id="related-books" style="display: none;">
            <h2 class="section-title">Related Books</h2>
            <div id="related-loading" class="loading">Loading related books...</div>
            <div class="books-grid" id="related-books-grid" style="display: none;"></div>
        </div>

    <script src="~/template/template.js"></script>
    <script>
        let bookId = null;
        let currentBook = null;

        document.addEventListener('DOMContentLoaded', function() {
            // Get book ID from URL
            const pathParts = window.location.pathname.split('/');
            bookId = pathParts[pathParts.length - 1];
            
            if (bookId) {
                loadBookDetails();
            } else {
                showError('Book ID not provided');
            }
        });

        async function loadBookDetails() {
            try {
                const response = await ELibAPI.get(ELibAPI.endpoints.book.getById(bookId));
                
                if (response.success) {
                    currentBook = response.data;
                    displayBookDetails(response.data);
                    loadRelatedBooks();
                } else {
                    showError('Book not found: ' + response.error);
                }

            } catch (error) {
                console.error('Error loading book details:', error);
                showError('Failed to load book details: ' + error.message);
            } finally {
                document.getElementById('book-loading').style.display = 'none';
                document.getElementById('book-header').style.display = 'block';
            }
        }

        function displayBookDetails(book) {
            document.getElementById('book-title').textContent = book.title;
            document.getElementById('book-authors').textContent = Array.isArray(book.authors) ? book.authors.join(', ') : book.authors || 'Unknown';
            document.getElementById('book-year').textContent = book.publishYear || 'Unknown';
            document.getElementById('book-categories').textContent = Array.isArray(book.categories) ? book.categories.join(', ') : book.categories || 'Unknown';
            document.getElementById('book-description').textContent = book.description || 'No description available.';
            
            // Update status
            const statusElement = document.getElementById('book-status');
            const borrowBtn = document.getElementById('borrow-btn');
            
            if (book.isAvailable) {
                statusElement.innerHTML = '<span class="status-badge status-available">Available</span>';
                borrowBtn.disabled = false;
                borrowBtn.textContent = 'Borrow Book';
            } else {
                statusElement.innerHTML = '<span class="status-badge status-unavailable">Unavailable</span>';
                borrowBtn.disabled = true;
                borrowBtn.textContent = 'Not Available';
            }
        }

        async function loadRelatedBooks() {
            try {
                // Get books from the same category
                const categoryId = currentBook.categories && currentBook.categories.length > 0 ? currentBook.categories[0] : null;
                
                if (categoryId) {
                    const response = await ELibAPI.get(ELibAPI.endpoints.book.getByCategory(categoryId, 1, 4));
                    
                    if (response.success) {
                        displayRelatedBooks(response.data.filter(book => book.id !== bookId));
                    }
                } else {
                    // If no category, get featured books
                    const response = await ELibAPI.get(ELibAPI.endpoints.book.getFeatured(4));
                    
                    if (response.success) {
                        displayRelatedBooks(response.data.filter(book => book.id !== bookId));
                    }
                }

            } catch (error) {
                console.error('Error loading related books:', error);
            } finally {
                document.getElementById('related-loading').style.display = 'none';
                document.getElementById('related-books-grid').style.display = 'grid';
            }
        }

        function displayRelatedBooks(books) {
            const container = document.getElementById('related-books-grid');
            container.innerHTML = '';

            if (!books || books.length === 0) {
                container.innerHTML = '<div style="grid-column: 1 / -1; text-align: center; padding: 20px; color: #666;">No related books found</div>';
                return;
            }

            books.forEach(book => {
                const bookCard = document.createElement('div');
                bookCard.className = 'book-card';
                bookCard.innerHTML = `
                    <div class="book-cover-small">ðŸ“š</div>
                    <div class="book-card-info">
                        <div class="book-card-title" title="${book.title}">${book.title}</div>
                        <div class="book-card-author">${Array.isArray(book.authors) ? book.authors.join(', ') : book.authors || 'Unknown'}</div>
                    </div>
                `;
                bookCard.onclick = () => viewBook(book.id);
                container.appendChild(bookCard);
            });
        }

        async function borrowBook() {
            // Check if user is logged in
            const userId = ELibAPI.getUserId();
            if (!userId) {
                alert('Please login to borrow books');
                window.location.href = '/Library/Login';
                return;
            }

            if (!confirm('Are you sure you want to borrow this book?')) {
                return;
            }

            try {
                const borrowData = {
                    userId: userId,
                    bookId: bookId,
                    dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString() // 14 days from now
                };

                const response = await ELibAPI.post(ELibAPI.endpoints.borrow.borrow, borrowData);
                if (response.success) {
                    alert('Book borrowed successfully!');
                    loadBookDetails(); // Refresh book details
                } else {
                    showError('Failed to borrow book: ' + response.error);
                }
            } catch (error) {
                console.error('Error borrowing book:', error);
                showError('Failed to borrow book: ' + error.message);
            }
        }

        function viewBook(bookId) {
            window.location.href = `/Library/BookDetails/${bookId}`;
        }

        function goBack() {
            window.history.back();
        }

        function showError(message) {
            const errorContainer = document.getElementById('error-container');
            errorContainer.innerHTML = `<div class="error">${message}</div>`;
        }
    </script>